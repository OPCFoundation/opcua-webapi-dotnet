/*
 * OPC UA Web API
 *
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Opc.Ua.WebApi.Client.OpenAPIDateConverter;

namespace Opc.Ua.WebApi.Model
{
    /// <summary>
    /// JsonWriterGroupMessageDataType
    /// </summary>
    [DataContract(Name = "JsonWriterGroupMessageDataType")]
    public partial class JsonWriterGroupMessageDataType : IEquatable<JsonWriterGroupMessageDataType>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JsonWriterGroupMessageDataType" /> class.
        /// </summary>
        /// <param name="networkMessageContentMask">networkMessageContentMask.</param>
        public JsonWriterGroupMessageDataType(long networkMessageContentMask = default(long))
        {
            this.NetworkMessageContentMask = networkMessageContentMask;
        }

        /// <summary>
        /// Gets or Sets NetworkMessageContentMask
        /// </summary>
        [DataMember(Name = "NetworkMessageContentMask", EmitDefaultValue = false)]
        public long NetworkMessageContentMask { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JsonWriterGroupMessageDataType {\n");
            sb.Append("  NetworkMessageContentMask: ").Append(NetworkMessageContentMask).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as JsonWriterGroupMessageDataType);
        }

        /// <summary>
        /// Returns true if JsonWriterGroupMessageDataType instances are equal
        /// </summary>
        /// <param name="input">Instance of JsonWriterGroupMessageDataType to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JsonWriterGroupMessageDataType input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.NetworkMessageContentMask == input.NetworkMessageContentMask ||
                    this.NetworkMessageContentMask.Equals(input.NetworkMessageContentMask)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.NetworkMessageContentMask.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // NetworkMessageContentMask (long) maximum
            if (this.NetworkMessageContentMask > (long)4294967295)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NetworkMessageContentMask, must be a value less than or equal to 4294967295.", new [] { "NetworkMessageContentMask" });
            }

            // NetworkMessageContentMask (long) minimum
            if (this.NetworkMessageContentMask < (long)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NetworkMessageContentMask, must be a value greater than or equal to 0.", new [] { "NetworkMessageContentMask" });
            }

            yield break;
        }
    }

}
