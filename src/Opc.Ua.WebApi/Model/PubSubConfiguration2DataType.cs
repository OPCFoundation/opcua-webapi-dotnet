/*
 * OPC UA Web API
 *
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Opc.Ua.WebApi.Client.OpenAPIDateConverter;

namespace Opc.Ua.WebApi.Model
{
    /// <summary>
    /// PubSubConfiguration2DataType
    /// </summary>
    [DataContract(Name = "PubSubConfiguration2DataType")]
    public partial class PubSubConfiguration2DataType : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PubSubConfiguration2DataType" /> class.
        /// </summary>
        /// <param name="subscribedDataSets">subscribedDataSets.</param>
        /// <param name="dataSetClasses">dataSetClasses.</param>
        /// <param name="defaultSecurityKeyServices">defaultSecurityKeyServices.</param>
        /// <param name="securityGroups">securityGroups.</param>
        /// <param name="pubSubKeyPushTargets">pubSubKeyPushTargets.</param>
        /// <param name="configurationVersion">configurationVersion (default to 0).</param>
        /// <param name="configurationProperties">configurationProperties.</param>
        /// <param name="publishedDataSets">publishedDataSets.</param>
        /// <param name="connections">connections.</param>
        /// <param name="enabled">enabled (default to false).</param>
        public PubSubConfiguration2DataType(List<StandaloneSubscribedDataSetDataType> subscribedDataSets = default(List<StandaloneSubscribedDataSetDataType>), List<DataSetMetaDataType> dataSetClasses = default(List<DataSetMetaDataType>), List<EndpointDescription> defaultSecurityKeyServices = default(List<EndpointDescription>), List<SecurityGroupDataType> securityGroups = default(List<SecurityGroupDataType>), List<PubSubKeyPushTargetDataType> pubSubKeyPushTargets = default(List<PubSubKeyPushTargetDataType>), long configurationVersion = 0, List<KeyValuePair> configurationProperties = default(List<KeyValuePair>), List<PublishedDataSetDataType> publishedDataSets = default(List<PublishedDataSetDataType>), List<PubSubConnectionDataType> connections = default(List<PubSubConnectionDataType>), bool enabled = false)
        {
            this.SubscribedDataSets = subscribedDataSets;
            this.DataSetClasses = dataSetClasses;
            this.DefaultSecurityKeyServices = defaultSecurityKeyServices;
            this.SecurityGroups = securityGroups;
            this.PubSubKeyPushTargets = pubSubKeyPushTargets;
            this.ConfigurationVersion = configurationVersion;
            this.ConfigurationProperties = configurationProperties;
            this.PublishedDataSets = publishedDataSets;
            this.Connections = connections;
            this.Enabled = enabled;
        }

        /// <summary>
        /// Gets or Sets SubscribedDataSets
        /// </summary>
        [DataMember(Name = "SubscribedDataSets", EmitDefaultValue = false)]
        public List<StandaloneSubscribedDataSetDataType> SubscribedDataSets { get; set; }

        /// <summary>
        /// Gets or Sets DataSetClasses
        /// </summary>
        [DataMember(Name = "DataSetClasses", EmitDefaultValue = false)]
        public List<DataSetMetaDataType> DataSetClasses { get; set; }

        /// <summary>
        /// Gets or Sets DefaultSecurityKeyServices
        /// </summary>
        [DataMember(Name = "DefaultSecurityKeyServices", EmitDefaultValue = false)]
        public List<EndpointDescription> DefaultSecurityKeyServices { get; set; }

        /// <summary>
        /// Gets or Sets SecurityGroups
        /// </summary>
        [DataMember(Name = "SecurityGroups", EmitDefaultValue = false)]
        public List<SecurityGroupDataType> SecurityGroups { get; set; }

        /// <summary>
        /// Gets or Sets PubSubKeyPushTargets
        /// </summary>
        [DataMember(Name = "PubSubKeyPushTargets", EmitDefaultValue = false)]
        public List<PubSubKeyPushTargetDataType> PubSubKeyPushTargets { get; set; }

        /// <summary>
        /// Gets or Sets ConfigurationVersion
        /// </summary>
        [DataMember(Name = "ConfigurationVersion", EmitDefaultValue = false)]
        public long ConfigurationVersion { get; set; }

        /// <summary>
        /// Gets or Sets ConfigurationProperties
        /// </summary>
        [DataMember(Name = "ConfigurationProperties", EmitDefaultValue = false)]
        public List<KeyValuePair> ConfigurationProperties { get; set; }

        /// <summary>
        /// Gets or Sets PublishedDataSets
        /// </summary>
        [DataMember(Name = "PublishedDataSets", EmitDefaultValue = false)]
        public List<PublishedDataSetDataType> PublishedDataSets { get; set; }

        /// <summary>
        /// Gets or Sets Connections
        /// </summary>
        [DataMember(Name = "Connections", EmitDefaultValue = false)]
        public List<PubSubConnectionDataType> Connections { get; set; }

        /// <summary>
        /// Gets or Sets Enabled
        /// </summary>
        [DataMember(Name = "Enabled", EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PubSubConfiguration2DataType {\n");
            sb.Append("  SubscribedDataSets: ").Append(SubscribedDataSets).Append("\n");
            sb.Append("  DataSetClasses: ").Append(DataSetClasses).Append("\n");
            sb.Append("  DefaultSecurityKeyServices: ").Append(DefaultSecurityKeyServices).Append("\n");
            sb.Append("  SecurityGroups: ").Append(SecurityGroups).Append("\n");
            sb.Append("  PubSubKeyPushTargets: ").Append(PubSubKeyPushTargets).Append("\n");
            sb.Append("  ConfigurationVersion: ").Append(ConfigurationVersion).Append("\n");
            sb.Append("  ConfigurationProperties: ").Append(ConfigurationProperties).Append("\n");
            sb.Append("  PublishedDataSets: ").Append(PublishedDataSets).Append("\n");
            sb.Append("  Connections: ").Append(Connections).Append("\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ConfigurationVersion (long) maximum
            if (this.ConfigurationVersion > (long)4294967295)
            {
                yield return new ValidationResult("Invalid value for ConfigurationVersion, must be a value less than or equal to 4294967295.", new [] { "ConfigurationVersion" });
            }

            // ConfigurationVersion (long) minimum
            if (this.ConfigurationVersion < (long)0)
            {
                yield return new ValidationResult("Invalid value for ConfigurationVersion, must be a value greater than or equal to 0.", new [] { "ConfigurationVersion" });
            }

            yield break;
        }
    }

}
