/*
 * OPC UA Web API
 *
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Opc.Ua.WebApi.Client.OpenAPIDateConverter;

namespace Opc.Ua.WebApi.Model
{
    /// <summary>
    /// PubSubConfigurationDataType
    /// </summary>
    [DataContract(Name = "PubSubConfigurationDataType")]
    public partial class PubSubConfigurationDataType : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PubSubConfigurationDataType" /> class.
        /// </summary>
        /// <param name="publishedDataSets">publishedDataSets.</param>
        /// <param name="connections">connections.</param>
        /// <param name="enabled">enabled (default to false).</param>
        public PubSubConfigurationDataType(List<PublishedDataSetDataType> publishedDataSets = default(List<PublishedDataSetDataType>), List<PubSubConnectionDataType> connections = default(List<PubSubConnectionDataType>), bool enabled = false)
        {
            this.PublishedDataSets = publishedDataSets;
            this.Connections = connections;
            this.Enabled = enabled;
        }

        /// <summary>
        /// Gets or Sets PublishedDataSets
        /// </summary>
        [DataMember(Name = "PublishedDataSets", EmitDefaultValue = false)]
        public List<PublishedDataSetDataType> PublishedDataSets { get; set; }

        /// <summary>
        /// Gets or Sets Connections
        /// </summary>
        [DataMember(Name = "Connections", EmitDefaultValue = false)]
        public List<PubSubConnectionDataType> Connections { get; set; }

        /// <summary>
        /// Gets or Sets Enabled
        /// </summary>
        [DataMember(Name = "Enabled", EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PubSubConfigurationDataType {\n");
            sb.Append("  PublishedDataSets: ").Append(PublishedDataSets).Append("\n");
            sb.Append("  Connections: ").Append(Connections).Append("\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
