/*
 * OPC UA Web API
 *
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Opc.Ua.WebApi.Client.OpenAPIDateConverter;

namespace Opc.Ua.WebApi.Model
{
    /// <summary>
    /// SetTriggeringResponse
    /// </summary>
    [DataContract(Name = "SetTriggeringResponse")]
    public partial class SetTriggeringResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SetTriggeringResponse" /> class.
        /// </summary>
        /// <param name="responseHeader">responseHeader.</param>
        /// <param name="addResults">addResults.</param>
        /// <param name="addDiagnosticInfos">addDiagnosticInfos.</param>
        /// <param name="removeResults">removeResults.</param>
        /// <param name="removeDiagnosticInfos">removeDiagnosticInfos.</param>
        public SetTriggeringResponse(ResponseHeader responseHeader = default(ResponseHeader), List<StatusCode> addResults = default(List<StatusCode>), List<DiagnosticInfo> addDiagnosticInfos = default(List<DiagnosticInfo>), List<StatusCode> removeResults = default(List<StatusCode>), List<DiagnosticInfo> removeDiagnosticInfos = default(List<DiagnosticInfo>))
        {
            this.ResponseHeader = responseHeader;
            this.AddResults = addResults;
            this.AddDiagnosticInfos = addDiagnosticInfos;
            this.RemoveResults = removeResults;
            this.RemoveDiagnosticInfos = removeDiagnosticInfos;
        }

        /// <summary>
        /// Gets or Sets ResponseHeader
        /// </summary>
        [DataMember(Name = "ResponseHeader", EmitDefaultValue = false)]
        public ResponseHeader ResponseHeader { get; set; }

        /// <summary>
        /// Gets or Sets AddResults
        /// </summary>
        [DataMember(Name = "AddResults", EmitDefaultValue = false)]
        public List<StatusCode> AddResults { get; set; }

        /// <summary>
        /// Gets or Sets AddDiagnosticInfos
        /// </summary>
        [DataMember(Name = "AddDiagnosticInfos", EmitDefaultValue = false)]
        public List<DiagnosticInfo> AddDiagnosticInfos { get; set; }

        /// <summary>
        /// Gets or Sets RemoveResults
        /// </summary>
        [DataMember(Name = "RemoveResults", EmitDefaultValue = false)]
        public List<StatusCode> RemoveResults { get; set; }

        /// <summary>
        /// Gets or Sets RemoveDiagnosticInfos
        /// </summary>
        [DataMember(Name = "RemoveDiagnosticInfos", EmitDefaultValue = false)]
        public List<DiagnosticInfo> RemoveDiagnosticInfos { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SetTriggeringResponse {\n");
            sb.Append("  ResponseHeader: ").Append(ResponseHeader).Append("\n");
            sb.Append("  AddResults: ").Append(AddResults).Append("\n");
            sb.Append("  AddDiagnosticInfos: ").Append(AddDiagnosticInfos).Append("\n");
            sb.Append("  RemoveResults: ").Append(RemoveResults).Append("\n");
            sb.Append("  RemoveDiagnosticInfos: ").Append(RemoveDiagnosticInfos).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
